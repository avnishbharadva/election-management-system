type: object
required:
  - firstName
  - lastName
  - dateOfBirth
  - gender
  - dmvNumber
  - ssnNumber
  - email
  - phoneNumber
  - residentialAddress
properties:
  firstName:
    type: string
    minLength: 2
    maxLength: 50
    example: "John"
  middleName:
    type: string
    maxLength: 20
    example: "A."
  lastName:
    type: string
    minLength: 2
    maxLength: 50
    example: "Doe"
  suffixName:
    type: string
    maxLength: 10
    example: "Jr."
  dateOfBirth:
    type: string
    format: date
    example: "1990-05-15"
  gender:
    type: string
    enum: [MALE, FEMALE]
    example: "MALE"
  dmvNumber:
    type: string
    pattern: "\\d{9}"
    example: "123456789"
  ssnNumber:
    type: string
    pattern: "\\d{9}"
    example: "987654321"
  email:
    type: string
    format: email
    example: "john.doe@example.com"
  phoneNumber:
    type: string
    pattern: "\\d{11}"
    example: "12345678901"
  hasVotedBefore:
    type: boolean
    example: false
  firstVotedYear:
    type: integer
    minimum: 1900
    maximum: 2025
    example: 2010
  partyId:
    type: integer
    format: int64
    example: 1
  residentialAddress:
    $ref: "./AddressDTO.yaml"
  mailingAddress:
    $ref: "./AddressDTO.yaml"
  image:
    type: string
    example: "base64-encoded-image-string"
  signature:
    type: string
    example: "base64-encoded-signature-string"
  statusId:
    type: integer
    format: int64
    example: 1