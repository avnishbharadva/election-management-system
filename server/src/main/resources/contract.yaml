openapi: 3.0.3
info:
  title: Election Management System Election APIs
  description: APIs for managing elections
  version: 1.0.1
  x-logo:
    url: C:\Users\Lenovo\Desktop\election-management-system\server\src\main\resources\static\image.png
    altText: Logo of EMS

servers:
  - url: http://localhost:8082/api

paths:
  /elections:
    post:
      summary: Create a new Election
      operationId: createElection
      tags:
        - Election
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ElectionDTO"
      responses:
        "200":
          description: Election Created Successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"

    get:
      summary: Get all Elections
      operationId: getAllElections
      tags:
        - Election
      responses:
        "200":
          description: List of all elections retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"

  /elections/{electionId}:
    get:
      summary: Get Election by ID
      operationId: getElectionById
      tags:
        - Election
      parameters:
        - name: electionId
          in: path
          required: true
          description: Unique ID of the election
          schema:
            type: long
      responses:
        "200":
          description: Election retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
        "404":
          description: Election not found

    put:
      summary: Update Election Details
      operationId: updateElection
      tags:
        - Election
      parameters:
        - name: electionId
          in: path
          required: true
          description: Unique ID of the Election
          schema:
            type: long
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ElectionUpdateDTO"
      responses:
        "200":
          description: Election Updated Successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationErrorResponse"
        "404":
          description: Election not found

    delete:
      summary: Delete an Election
      operationId: deleteElection
      tags:
        - Election
      parameters:
        - name: electionId
          in: path
          required: true
          description: Unique ID of the election
          schema:
            type: long
      responses:
        "200":
          description: Election deleted successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
        "404":
          description: Election not found

  /elections/sorted:
    get:
      summary: Get sorted List of elections
      operationId: getSortedElection
      tags:
        - Election
      parameters:
        - name: order
          in: query
          required: false
          description: Sort Order (asc/desc)
          schema:
            type: string
            enum: [asc, desc]
            default: asc
        - name: page
          in: query
          required: false
          description: Page number for pagination
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          required: false
          description: Number of records per page
          schema:
            type: integer
            default: 5
      responses:
        "200":
          description: Paginated and sorted election list
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ElectionPageResponse"
        "400":
          description: Invalid request parameters
        "500":
          description: Internal Server Error

components:
  schemas:
    ElectionUpdateDTO:
      type: object

      properties:
        electionId:
          type: long
          example: 101
        electionName:
          type: string
          maxLength: 255
          example: "Presidential Election"
          description: "Election name must have length less than 255"
        electionType:
          type: string
          maxLength: 100
          example: "General"
          description: "Election type must have length 100"
        electionDate:
          type: string
          format: date
          example: "2025-11-03"
        electionState:
          type: string
          maxLength: 100
          example: "California"
          description: "State name must have less than 100 characters"
        totalSeats:
          type: integer
          minimum: 1
          example: 50
          x-custom-message: "Minimum 1 seat is required"
          description: "Minimum one seat should be there to create an election"
    ElectionDTO:
      type: object

      properties:
        electionId:
          type: long
          example: 101
        electionName:
          type: string
          maxLength: 255
          example: "Presidential Election"
          description: "Election name must have length less than 255"
        electionType:
          type: string
          maxLength: 100
          example: "General"
          description: "Election type must have length 100"
        electionDate:
          type: string
          format: date
          example: "2025-11-03"
        electionState:
          type: string
          maxLength: 100
          example: "California"
          description: "State name must have less than 100 characters"
        totalSeats:
          type: integer
          minimum: 1
          example: 50
          x-custom-message: "Minimum 1 seat is required"
          description: "Minimum one seat should be there to create an election"
      required:
        - electionName
        - electionType
        - electionDate
        - electionState
        - totalSeats
    ApiResponse:
      type: object
      properties:
        data:
          type: object
        timestamp:
          type: string
          format: date-time
        success:
          type: boolean
          example: true
    ElectionPageResponse:
      type: object
      properties:
        elections:
          type: array
          items:
            $ref: "#/components/schemas/ElectionSortDTO"
        currentPage:
          type: integer
          example: 1
        totalPages:
          type: integer
          example: 5
        totalRecords:
          type: integer
          example: 100
        perPage:
          type: integer
          example: 10

    ElectionSortDTO:
      type: object
      properties:
        electionId:
          type: integer
          example: 1
        electionName:
          type: string
          example: "Presidential Election"
        electionType:
          type: string
          example: "General"
        electionDate:
          type: string
          format: date
          example: "2025-10-10"
        electionState:
          type: string
          example: "California"
        totalSeats:
          type: integer
          example: 100
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: Detailed error message
          example: Detailed error message
        timestamp:
          type: string
          format: date-time
          description: Timestamp of when the error occurred
          example: "2025-03-05T10:30:15"

    ValidationErrorResponse:
      type: object
      properties:
        message:
          type: string
          example: "Validation failed for request."
        errors:
          type: array
          items:
            $ref: "#/components/schemas/ErrorItem"

    ErrorItem:
      type: object
      properties:
        field:
          type: string
          example: "electionType"
        errorMessage:
          type: string
          example: "Election Type must be less that 100 characters"
